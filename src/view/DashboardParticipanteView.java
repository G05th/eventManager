/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.EventoController;
import controller.InscricaoController;
import model.EventoTableModel;
import model.Eventos;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author ghost
 */
public class DashboardParticipanteView extends javax.swing.JFrame {

    /**
     * Creates new form DashboardMainView
     */
    public DashboardParticipanteView() {
        initComponents();
        carregarEventos();
        configurarTabelaEventos();
    }
    
    private void configurarTabelaEventos() {
    TabelaDeEventos.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            int selectedRow = TabelaDeEventos.getSelectedRow();
            if (selectedRow != -1) {
                // Obtém o modelo da tabela e o evento selecionado
                EventoTableModel model = (EventoTableModel) TabelaDeEventos.getModel();
                Eventos eventoSelecionado = model.getEventoAt(selectedRow);
                
                // Preenche os campos de texto com os detalhes do evento
                NomeEvento.setText(eventoSelecionado.getNome());
                
                // Formata a data para exibição (supondo o formato dd/MM/yyyy)
                java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");
                if (eventoSelecionado.getData() != null) {
                    DataEvento.setText(sdf.format(eventoSelecionado.getData()));
                } else {
                    DataEvento.setText("");
                }
                
                LocalEvento.setText(eventoSelecionado.getLocal());
                DescricaoEvento.setText(eventoSelecionado.getDescricao());
                
                // Verifica se há caminho de imagem e exibe a imagem redimensionada no label
                if (eventoSelecionado.getCaminhoImagem() != null && !eventoSelecionado.getCaminhoImagem().isEmpty()) {
                    try {
                        java.io.File file = new java.io.File(eventoSelecionado.getCaminhoImagem());
                        java.awt.image.BufferedImage bi = javax.imageio.ImageIO.read(file);
                        // Redimensiona a imagem para se ajustar ao tamanho do label
                        java.awt.Image img = bi.getScaledInstance(labelEventImg1.getWidth(), labelEventImg1.getHeight(), java.awt.Image.SCALE_SMOOTH);
                        labelEventImg1.setIcon(new javax.swing.ImageIcon(img));
                    } catch (java.io.IOException ex) {
                        ex.printStackTrace();
                        javax.swing.JOptionPane.showMessageDialog(null, "Erro ao carregar imagem: " + ex.getMessage());
                    }
                } else {
                    labelEventImg1.setIcon(null);
                }
            }
        }
    });
}

    
    private void carregarEventos() {
        try {
            EventoController eventoController = new EventoController();
            // Para participantes, usamos o método que retorna todos os eventos
            List<Eventos> eventos = eventoController.listarEventos();

            // Debug: imprimir quantos eventos foram carregados
            System.out.println("Eventos carregados: " + eventos.size());
            
            // Cria e define o modelo na JTable
            EventoTableModel model = new EventoTableModel(eventos);
            TabelaDeEventos.setModel(model);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar eventos: " + ex.getMessage());
            ex.printStackTrace();
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaDeEventos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        labelEventImg1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        NomeEvento = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        DataEvento = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        LocalEvento = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DescricaoEvento = new javax.swing.JTextArea();
        btnInscreverSeNoEvento = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setIcon(new javax.swing.ImageIcon("/home/ghost/Transferências/trans_bg(2).png")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 204));
        jLabel2.setText("Hello, Username");

        TabelaDeEventos.setBackground(new java.awt.Color(153, 153, 153));
        TabelaDeEventos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Data", "Local", "Descrição"
            }
        ));
        jScrollPane1.setViewportView(TabelaDeEventos);

        jLabel3.setBackground(new java.awt.Color(204, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 255, 255));
        jLabel3.setText("Eventos");

        labelEventImg1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));

        jLabel4.setText("Nome");

        jLabel5.setText("Data");

        jLabel6.setText("Local");

        jLabel7.setText("Descrição");

        DescricaoEvento.setColumns(20);
        DescricaoEvento.setRows(5);
        jScrollPane2.setViewportView(DescricaoEvento);

        btnInscreverSeNoEvento.setBackground(new java.awt.Color(153, 153, 153));
        btnInscreverSeNoEvento.setText("inscrever-se");
        btnInscreverSeNoEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInscreverSeNoEventoActionPerformed(evt);
            }
        });

        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelEventImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(LocalEvento)
                            .addComponent(DataEvento)
                            .addComponent(NomeEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnInscreverSeNoEvento)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(156, 156, 156)
                        .addComponent(btnLogout))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelEventImg1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NomeEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DataEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LocalEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnInscreverSeNoEvento))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(btnLogout))
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        int a = JOptionPane.showConfirmDialog(null, "Deseja Terminar seção?", "Selecione a Opção", JOptionPane.YES_NO_OPTION);
        if(a == 0){

            setVisible(false);
            new LoginView().setVisible(true);
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnInscreverSeNoEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInscreverSeNoEventoActionPerformed

    int selectedRow = TabelaDeEventos.getSelectedRow();
    if (selectedRow < 0) {
        javax.swing.JOptionPane.showMessageDialog(this, "Por favor, selecione um evento na tabela.");
        return;
    }
    
    // Obtém o modelo da tabela e o evento selecionado
    EventoTableModel model = (EventoTableModel) TabelaDeEventos.getModel();
    Eventos eventoSelecionado = model.getEventoAt(selectedRow);
    
    // Preenche os campos da interface com as informações do evento selecionado
    NomeEvento.setText(eventoSelecionado.getNome());
    
    // Formata a data para exibição
    java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");
    if (eventoSelecionado.getData() != null) {
        DataEvento.setText(sdf.format(eventoSelecionado.getData()));
    } else {
        DataEvento.setText("");
    }
    
    LocalEvento.setText(eventoSelecionado.getLocal());
    DescricaoEvento.setText(eventoSelecionado.getDescricao());
    
    // Trata a exibição da imagem, se houver
    if (eventoSelecionado.getCaminhoImagem() != null && !eventoSelecionado.getCaminhoImagem().isEmpty()) {
        try {
            java.io.File file = new java.io.File(eventoSelecionado.getCaminhoImagem());
            java.awt.image.BufferedImage bi = javax.imageio.ImageIO.read(file);
            // Redimensiona a imagem conforme o tamanho do label
            java.awt.Image img = bi.getScaledInstance(labelEventImg1.getWidth(), labelEventImg1.getHeight(), java.awt.Image.SCALE_SMOOTH);
            labelEventImg1.setIcon(new javax.swing.ImageIcon(img));
        } catch (java.io.IOException ex) {
            ex.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Erro ao carregar a imagem do evento.");
        }
    } else {
        labelEventImg1.setIcon(null);
    }
    
    // Verifica se o usuário (participante) está autenticado
    model.Usuario participante = util.Sessao.getUsuarioLogado();
    if (participante == null) {
        javax.swing.JOptionPane.showMessageDialog(this, "Você não está autenticado. Por favor, faça login para se inscrever.");
        return;
    }
    
    // Cria a inscrição para o evento
    // Supondo que a classe Inscricao possua um construtor com os parâmetros: (Long id, Long eventoId, Long usuarioId, Date dataInscricao)
    model.Inscricao inscricao = new model.Inscricao();
    inscricao.setEventoId(eventoSelecionado.getId());
    inscricao.setUsuarioId(participante.getId());
    inscricao.setDataInscricao(new java.util.Date());
    
    // Chama o InscricaoController para salvar a inscrição
    InscricaoController inscricaoController = new InscricaoController();
    boolean sucesso = inscricaoController.salvarInscricao(inscricao);
    
    if (sucesso) {
        javax.swing.JOptionPane.showMessageDialog(this, "Inscrição realizada com sucesso!");
    } else {
        javax.swing.JOptionPane.showMessageDialog(this, "Erro ao realizar a inscrição. Tente novamente.");
    }

    }//GEN-LAST:event_btnInscreverSeNoEventoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardParticipanteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardParticipanteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardParticipanteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardParticipanteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardParticipanteView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DataEvento;
    private javax.swing.JTextArea DescricaoEvento;
    private javax.swing.JTextField LocalEvento;
    private javax.swing.JTextField NomeEvento;
    private javax.swing.JTable TabelaDeEventos;
    private javax.swing.JButton btnInscreverSeNoEvento;
    private javax.swing.JButton btnLogout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelEventImg1;
    // End of variables declaration//GEN-END:variables
}
